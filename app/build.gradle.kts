/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.5/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation(libs.junit.jupiter)

    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    // This dependency is used by the application.
    implementation(libs.guava)
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

application {
    // Define the main class for the application.
    mainClass.set("noir.App")
    applicationDefaultJvmArgs = listOf("-Djava.library.path=${projectDir}/src/main/noir_java/target/release")
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

val rustLibName = "noir_java" // Adjust based on your library name
val rustLibPath = "src/main/$rustLibName" // Adjust based on your library name

tasks.register("buildRust", Exec::class) {
    workingDir(file("$rustLibPath"))
    commandLine("cargo", "build", "--release")
}

tasks.register("buildNargo", Exec::class) {
    workingDir(file("$rustLibPath"))
    commandLine("nargo", "compile")
}

tasks.register("copyNargoBytecode", Copy::class) {
    val targetDir = "${rustLibName}.json"
    from("$rustLibPath/target/$targetDir")
    into("src/main/resources")
}

tasks.named<ProcessResources>("processResources") {
    dependsOn("copyNargoBytecode")
}

tasks.named("build") {
    dependsOn("buildRust", "buildNargo", "copyNargoBytecode")
}